diff --git a/gui/tasks/distribution.js b/gui/tasks/distribution.js
index 0bf9cc3..e926275 100644
--- a/gui/tasks/distribution.js
+++ b/gui/tasks/distribution.js
@@ -26,11 +26,15 @@ const config = {
   productName: 'Mullvad VPN',
   publish: null,
   asar: true,
+  electronDist: "@electron_dist@",
+  electronVersion: "@electron_version@",
   compression: noCompression ? 'store' : 'normal',
   extraResources: [
     { from: distAssets('ca.crt'), to: '.' },
     { from: buildAssets('relays.json'), to: '.' },
     { from: root('CHANGELOG.md'), to: '.' },
+    { from: distAssets('mullvad-daemon'), to: '.' },
+    { from: distAssets('mullvad-problem-report'), to: '.' },
   ],
 
   directories: {
@@ -63,25 +67,9 @@ const config = {
     '!node_modules/nseventmonitor/build/Release',
   ],
 
-  // Make sure that all files declared in "extraResources" exists and abort if they don't.
-  afterPack: (context) => {
-    if (context.arch !== Arch.universal) {
-      const resources = context.packager.platformSpecificBuildOptions.extraResources;
-      for (const resource of resources) {
-        const filePath = resource.from.replace(/\$\{env\.(.*)\}/, function (match, captureGroup) {
-          return process.env[captureGroup];
-        });
-
-        if (!fs.existsSync(filePath)) {
-          throw new Error(`Can't find file: ${filePath}`);
-        }
-      }
-    }
-  },
-
   mac: {
     target: {
-      target: 'pkg',
+      target: 'dir',
       arch: getMacArch(),
     },
     singleArchFiles: 'node_modules/nseventmonitor/lib/binding/Release/**',
@@ -93,21 +81,6 @@ const config = {
       LSUIElement: true,
       NSUserNotificationAlertStyle: 'banner',
     },
-    extraResources: [
-      { from: distAssets(path.join('${env.BINARIES_PATH}', 'mullvad')), to: '.' },
-      { from: distAssets(path.join('${env.BINARIES_PATH}', 'mullvad-problem-report')), to: '.' },
-      { from: distAssets(path.join('${env.BINARIES_PATH}', 'mullvad-daemon')), to: '.' },
-      { from: distAssets(path.join('${env.BINARIES_PATH}', 'mullvad-setup')), to: '.' },
-      {
-        from: distAssets(path.join('${env.BINARIES_PATH}', 'libtalpid_openvpn_plugin.dylib')),
-        to: '.',
-      },
-      { from: distAssets(path.join('binaries', '${env.TARGET_TRIPLE}', 'openvpn')), to: '.' },
-      { from: distAssets(path.join('binaries', '${env.TARGET_TRIPLE}', 'apisocks5')), to: '.' },
-      { from: distAssets('uninstall_macos.sh'), to: './uninstall.sh' },
-      { from: buildAssets('shell-completions/_mullvad'), to: '.' },
-      { from: buildAssets('shell-completions/mullvad.fish'), to: '.' },
-    ],
   },
 
   pkg: {
@@ -160,11 +133,7 @@ const config = {
   linux: {
     target: [
       {
-        target: 'deb',
-        arch: getLinuxTargetArch(),
-      },
-      {
-        target: 'rpm',
+        target: 'dir',
         arch: getLinuxTargetArch(),
       },
     ],
@@ -172,14 +141,6 @@ const config = {
     category: 'Network',
     icon: distAssets('icon.icns'),
     extraFiles: [{ from: distAssets('linux/mullvad-gui-launcher.sh'), to: '.' }],
-    extraResources: [
-      { from: distAssets(path.join(getLinuxTargetSubdir(), 'mullvad-problem-report')), to: '.' },
-      { from: distAssets(path.join(getLinuxTargetSubdir(), 'mullvad-setup')), to: '.' },
-      { from: distAssets(path.join(getLinuxTargetSubdir(), 'libtalpid_openvpn_plugin.so')), to: '.' },
-      { from: distAssets(path.join('linux', 'apparmor_mullvad')), to: '.' },
-      { from: distAssets(path.join('binaries', '${env.TARGET_TRIPLE}', 'openvpn')), to: '.' },
-      { from: distAssets(path.join('binaries', '${env.TARGET_TRIPLE}', 'apisocks5')), to: '.' },
-    ],
   },
 
   deb: {
